{
	// Place your comp programing workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Solution Header C++": {
		"scope": "cpp",
		"prefix": "header",
		"body": [
			"/*",
			" * Author: KurbyDoo",
			" * Creation Date: ${CURRENT_MONTH_NAME_SHORT} ${CURRENT_DATE}, ${CURRENT_YEAR}",
			" * Problem Link: ${1:link}",
			" * Problem Name: ${2:name}",
			" * Status: Unsolved",
			" * Notes:",
			" *     Original creation date unknown",
			" *     ",
			" *     ",
			" *     ",
			" */",
		],
		"description": "Header snippet for solution files"
	},
	"Python Solution Header": {
		"scope": "python",
		"prefix": "header",
		"body": [
			"# Author: KurbyDoo",
			"# Creation Date: ${CURRENT_MONTH_NAME_SHORT} ${CURRENT_DATE}, ${CURRENT_YEAR}",
			"# Problem Link: ${1:link}",
			"# Problem Name: ${2:name}",
			"# Status: Unsolved",
			"# Notes:",
			"#     Original creation date unknown",
			"#     ",
			"#     ",
			"#     ",
		],
		"description": "Header snippet for solution files"
	},
	"C++ Base template": {
		"scope": "cpp",
		"prefix": "base",
		"body": [
			"#include<bits/stdc++.h>",
			"",
			"using namespace std;",
			"",
			"typedef long long ll;",
			"typedef pair<ll, ll> pll;",
			"",
			"int main() {",
			"    cin.tie(0); cin.sync_with_stdio(0);",
			"    ",
			"    $2",
			"    ",
			"    return 0;",
			"}"
		],
		"description": "C++ Base code"
	}
}